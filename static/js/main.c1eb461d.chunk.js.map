{"version":3,"sources":["Components/DoughnutChart/DoughnutChart.module.css","Components/Chart/Chart.module.css","Components/DatePicker/DatePicker.module.css","App.module.css","Components/Images/image.png","logo.svg","Components/Cards/Cards.module.css","Components/DoughnutChart/Doughnut2.js","Components/CovidTracker.js","Components/TextError.js","Components/CovidForm.js","Components/History.js","Components/api/index.js","Components/Cards/Cards.jsx","Components/Chart/Chart.jsx","Components/Image.js","Components/DatePicker/DatePicker.js","Components/Modal.js","Components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Doughnut2","useState","total","setTotal","active","confirmed","recovered","deaths","useEffect","axios","get","then","response","console","log","push","parseInt","data","labels","datasets","label","backgroundColor","borderColor","catch","err","className","styles","container","grp","options","responsive","maintainAspectRatio","CovidTracker","posts","setPosts","res","style","background","color","fontSize","length","map","post","key","id","state","colSpan","TextError","props","children","validationSchema","Yup","name","required","age","gender","livinglocation","workinglocation","smoke","travelHistory","travelDomestic","contactPeople","suspectPeople","temperature","symptoms","complications","underlyingConditions","CovidForm","result","setresult","initialValues","travelLocation","travelDomesticLocation","onSubmit","setSubmitting","resetForm","score","ifNeeded","values","isSubmitting","htmlFor","type","placeholder","as","TextField","component","value","Radio","select","MenuItem","Checkbox","disabled","history","fetchData","a","Cards","cx","bg","form","Grid","spacing","justify","item","Card","xs","md","card","CardContent","Typography","gutterBottom","variant","start","end","duration","separator","infected","Chart","chartData","setChartData","obj","fill","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","display","xAxes","Image","alt","src","coronoImage","DatePicker","Dates","setDate","dailyDates","dailyconfirmed","dailydeceased","dailyrecovered","cases_time_series","date","Home","fetchedData","this","setState","Button","size","onClick","Component","Routes","History","path","exact","Modal","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,UAAY,iCAAiC,IAAM,6B,oBCArED,EAAOC,QAAU,CAAC,UAAY,yBAAyB,IAAM,qB,oBCA7DD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,IAAM,0B,oBCAlED,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,oBCD7DD,EAAOC,QAAU,IAA0B,mC,gFCA3CD,EAAOC,QAAU,IAA0B,kC,yCCC3CD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,OAAS,sBAAsB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,QAAU,yB,sPCoEnNC,EA7DO,WAAO,IAAD,EACMC,mBAAS,IADf,mBACbC,EADa,KACNC,EADM,KAEhBC,EAAS,GACTC,EAAY,GACZC,EAAY,GACZC,EAAS,GAqCb,OAlCAC,qBAAU,WACHC,IACEC,IADF,gDAEEC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GAGRR,EAAOW,KAAKC,SAASJ,EAASK,KAAKb,SACnCG,EAAOQ,KAAKC,SAASJ,EAASK,KAAKV,SACnCD,EAAUS,KAAKC,SAASJ,EAASK,KAAKX,YACtCD,EAAUU,KAAKC,SAASJ,EAASK,KAAKZ,YAG1CF,EAAS,CAELe,OAAO,CAAC,SAAU,YAAa,YAAa,UAC5CC,SAAU,CAAE,CACRC,MAAM,aACNH,KAAK,CAACb,EAAOC,EAAUC,EAAUC,GACjCc,gBAAgB,CAAC,qBAAqB,uBAAuB,sBAAsB,uBACnFC,YAAY,CAAC,mBAAmB,sBAAsB,sBAAsB,8BAQvFC,OAAM,SAAAC,GACHX,QAAQC,IAAIU,QAEtB,IAIE,yBAAKC,UAAWC,IAAOC,WACnB,gCAAQ,wBAAIF,UAAU,WACtB,yBAAKA,UAAWC,IAAOE,KACnB,kBAAC,IAAD,CACIX,KAAMf,EACN2B,QAAS,CACLC,YAAY,EACZC,qBAAqB,Q,gBCoBlCC,MAxEf,WAAyB,IAAD,EACM/B,mBAAS,IADf,mBACbgC,EADa,KACNC,EADM,KAgBpB,OAdA1B,qBAAU,WACNC,IACKC,IADL,qDAEKC,MAAK,SAAAwB,GACFtB,QAAQC,IAAIqB,GACZD,EAASC,EAAIlB,SAEhBM,OAAM,SAAAC,GACHX,QAAQC,IAAIU,QAErB,IAKC,yBACIY,MAAO,CACHC,WAAY,IAGbZ,UAAU,QACX,oCAAS,wBAAIA,UAAU,QACzBW,MAAO,CACHE,MAAO,GACPC,SAAS,OAOb,6BAEI,+BAEI,+BACI,wBAAId,UAAU,WACV,qCACA,sCACA,yCACA,yCACA,wCAGR,+BACKQ,EAAMO,OACDP,EAAMQ,KAAI,SAACC,GAAD,OAEJ,wBAAIC,IAAKD,EAAKE,IACV,4BAAKF,EAAKG,OACV,4BAAKH,EAAKtC,QACV,4BAAMsC,EAAKrC,WACX,4BAAMqC,EAAKpC,WACX,4BAAMoC,EAAKnC,YAGd,4BAAI,wBAAIuC,QAAQ,KAAZ,oB,mDCxD1BC,MANf,SAAmBC,GACjB,OAAO,yBAAKvB,UAAU,SACjBuB,EAAMC,WCKPC,EAAmBC,IAAW,CAChCC,KAAMD,MAAaE,SAAS,YAC5BC,IAAKH,MAAaE,SAAS,YAC3BE,OAAQJ,MAAaE,SAAS,YAC9BG,eAAgBL,MAAaE,SAAS,YACtCI,gBAAiBN,MAAaE,SAAS,YACvCK,MAAOP,MAAaE,SAAS,YAC7BM,cAAeR,MAAaE,SAAS,YAErCO,eAAgBT,MAAaE,SAAS,YAEtCQ,cAAeV,MAAaE,SAAS,YACrCS,cAAeX,MAAaE,SAAS,YACrCU,YAAaZ,MAAaE,SAAS,YACnCW,SAAUb,MAAaE,SAAS,YAChCY,cAAed,MAAaE,SAAS,YACrCa,qBAAsBf,MAAaE,SAAS,cAqejCc,MArZf,WAAsB,IAAD,EACelE,mBAAS,IADxB,mBACNmE,EADM,KACEC,EADF,KAGjB,OACI,kBAAC,IAAD,CACIC,cAAe,CACXlB,KAAM,GACNE,IAAK,GACLC,OAAQ,GACRC,eAAgB,GAChBC,gBAAiB,GACjBC,MAAO,GACPC,cAAe,GACfY,eAAgB,GAChBX,eAAgB,GAChBY,uBAAwB,GACxBX,cAAe,GACfC,cAAe,GACfC,YAAa,GACbC,SAAU,GACVC,cAAe,GACfC,qBAAsB,IAE1BhB,iBAAkBA,EAClBuB,SAAU,SAACxD,EAAD,GAAyC,IAAhCyD,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC9BD,GAAc,GACd7D,QAAQC,IAAI,WAAYG,GACxByD,GAAc,GACdC,IACAN,EA1GhB,SAAkBpD,GACd,IAAI2D,EAAQ,EAoCZ,OAlCA/D,QAAQC,IAAI,WAAYG,GACI,iBAAxBA,EAAKuC,gBACPoB,IAE2B,sBAAzB3D,EAAKwC,iBACPmB,IAEiB,OAAf3D,EAAKyC,OACPkB,IAEyB,OAAvB3D,EAAK0C,gBACPiB,IAC4B,kBAAxB3D,EAAKsD,iBACPK,GAAS,IAGe,OAAxB3D,EAAK2C,iBACPgB,GAAS,GAEgB,OAAvB3D,EAAK4C,eACPe,IAEyB,OAAvB3D,EAAK6C,eACPc,IAE2B,IAAzB3D,EAAK+C,SAASxB,QAChBoC,IAEgC,IAA9B3D,EAAKgD,cAAczB,QACrBoC,IAEuC,IAArC3D,EAAKiD,qBAAqB1B,QAC5BoC,IAEM3D,EAAK8C,aACX,IAAK,SAGL,IAAK,OAGL,IAAK,QACHa,IAKJ,OAAIA,EAAQ,EAER,yBAAKnD,UAAU,QACf,wBAAIA,UAAU,QAAd,aAA+B,+CAD/B,IACoD,6BADpD,oEAMAmD,GAAS,GAAKA,GAAS,EAExB,yBAAKnD,UAAU,QACV,wBAAIA,UAAU,QAAd,eAAiC,+CAAoB,6BAD1D,sEAOCmD,GAAS,GAAKA,GAAS,EAErB,yBAAKnD,UAAU,QACX,wBAAIA,UAAU,QAAd,YAA8B,+CAAoB,6BADtD,wEAMNZ,QAAQC,IAAI8D,GA+BUC,CAAS5D,OAGtB,cAAG6D,OAAH,IAAWC,EAAX,EAAWA,aAAX,OACG,6BAEI,yBAAKtD,UAAU,UAEX,kBAAC,IAAD,CAAMA,UAAU,YACZ,wBAAIA,UAAU,UAAd,qDAGA,yBAAKA,UAAU,gBACX,2BAAOuD,QAAQ,QAAf,yBAAmD,6BAEnD,kBAAC,IAAD,CAAOC,KAAK,OAAOrC,GAAG,OAAOQ,KAAK,OAAO8B,YAAY,kBAAkBzD,UAAU,UAAU0D,GAAIC,MAE/F,kBAAC,IAAD,CAAchC,KAAK,OAAOiC,UAAWtC,KAGzC,yBAAKtB,UAAU,iBACX,2BAAOuD,QAAQ,OAAf,uBAAgD,6BAChD,kBAAC,IAAD,CAAOC,KAAK,OAAOrC,GAAG,MAAMQ,KAAK,MAAM8B,YAAY,iBAAiBzD,UAAU,UAAU0D,GAAIC,MAC5F,kBAAC,IAAD,CAAchC,KAAK,MAAMiC,UAAWtC,KAGxC,yBAAKtB,UAAU,iBACX,2BAAOuD,QAAQ,UAAf,kCAA8D,6BAC9D,kBAAC,IAAD,CAAc5B,KAAK,SAASiC,UAAWtC,IAGvC,kBAAC,IAAD,CAAOkC,KAAK,QAAQK,MAAM,SAASlC,KAAK,SAAS+B,GAAII,MACrD,wCAAmB,6BAEnB,kBAAC,IAAD,CAAON,KAAK,QAAQK,MAAM,OAAOlC,KAAK,SAAS+B,GAAII,MACnD,sCAAiB,6BAEjB,kBAAC,IAAD,CAAON,KAAK,QAAQK,MAAM,SAASlC,KAAK,SAAS+B,GAAII,MACrD,wCAAmB,8BAIvB,yBAAK9D,UAAU,gBACX,2BAAOuD,QAAQ,kBAAf,6CAAiF,6BACjF,kBAAC,IAAD,CAAc5B,KAAK,iBAAiBiC,UAAWtC,IAE/C,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,iBAAiBQ,KAAK,iBAAiBkC,MAAM,eAAeH,GAAII,MACvF,+CAA0B,6BAE1B,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,iBAAiBQ,KAAK,iBAAiBkC,MAAM,qBAAqBH,GAAII,MAC7F,sDAIJ,yBAAK9D,UAAU,gBACX,2BAAOuD,QAAQ,mBAAf,4DAAiG,6BACjG,kBAAC,IAAD,CAAc5B,KAAK,kBAAkBiC,UAAWtC,IAEhD,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,kBAAkBQ,KAAK,kBAAkBkC,MAAM,2BAA2BH,GAAII,MACrG,2DAAsC,6BAEtC,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,kBAAkBQ,KAAK,kBAAkBkC,MAAM,yEAAyEH,GAAII,MACnJ,yGAAoF,6BAEpF,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,kBAAkBQ,KAAK,kBAAkBkC,MAAM,oBAAoBH,GAAII,MAC9F,qDAIJ,yBAAK9D,UAAU,gBACX,2BAAOuD,QAAQ,SAAf,oBAA+C,6BAC/C,kBAAC,IAAD,CAAc5B,KAAK,QAAQiC,UAAWtC,IAEtC,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,QAAQQ,KAAK,QAAQkC,MAAM,MAAMH,GAAII,MAC5D,qCAAgB,6BAEhB,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,QAAQQ,KAAK,QAAQkC,MAAM,KAAKH,GAAII,MAC3D,qCAGJ,yBAAK9D,UAAU,gBACX,2BAAOuD,QAAQ,iBAAf,mEAAsG,6BACtG,kBAAC,IAAD,CAAc5B,KAAK,gBAAgBiC,UAAWtC,IAE9C,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,gBAAgBQ,KAAK,gBAAgBkC,MAAM,MAAMH,GAAII,MAC5E,qCAAgB,6BAEhB,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,gBAAgBQ,KAAK,gBAAgBkC,MAAM,KAAKH,GAAII,MAC3E,qCAGJ,yBAAK9D,UAAU,gBACX,2BAAOA,UAAU,QAAQuD,QAAQ,kBAAjC,qDAGA,kBAAC,IAAD,CAAc5B,KAAK,iBAAiBiC,UAAWtC,IAC/C,kBAAC,IAAD,CACIK,KAAK,iBACLR,GAAG,iBACHnB,UAAU,SACV0D,GAAIC,IACJI,QAAM,GAEN,kBAACC,EAAA,EAAD,CAAUH,MAAM,SAAhB,SACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,UAAhB,UACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,QAAhB,QACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,OAAhB,OACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,eAAhB,eACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,SAAhB,SACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,iBAAhB,mBAIR,yBAAK7D,UAAU,gBACX,2BAAOuD,QAAQ,kBAAf,0EAA8G,6BAC9G,kBAAC,IAAD,CAAc5B,KAAK,iBAAiBiC,UAAWtC,IAC/C,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,iBAAiBQ,KAAK,iBAAiBkC,MAAM,MAAMH,GAAII,MAC9E,qCAAgB,6BAEhB,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,iBAAiBQ,KAAK,iBAAiBkC,MAAM,KAAKH,GAAII,MAC7E,qCAGJ,yBAAK9D,UAAU,gBACX,2BAAOA,UAAU,QAAQuD,QAAQ,0BAAjC,sDAGA,kBAAC,IAAD,CAAc5B,KAAK,iBAAiBiC,UAAWtC,IAC/C,kBAAC,IAAD,CACIK,KAAK,yBACLR,GAAG,yBACHnB,UAAU,SACV0D,GAAIC,IACJI,QAAM,GAEN,kBAACC,EAAA,EAAD,CAAUH,MAAM,aAAhB,aACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,YAAhB,YACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,WAAhB,WACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,WAAhB,WACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,UAAhB,UACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,UAAhB,UACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,SAAhB,SACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,aAAhB,cACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,aAAhB,aACA,kBAACG,EAAA,EAAD,CACIH,MAAM,qBACNlE,MAAM,yBAOlB,yBAAKK,UAAU,gBACX,2BAAOuD,QAAQ,iBAAf,4DAA+F,6BAC/F,kBAAC,IAAD,CAAc5B,KAAK,gBAAgBiC,UAAWtC,IAC9C,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,gBAAgBQ,KAAK,gBAAgBkC,MAAM,MAAMH,GAAII,MAC5E,qCAAgB,6BAEhB,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,gBAAgBQ,KAAK,gBAAgBkC,MAAM,KAAKH,GAAII,MAC3E,qCAGJ,yBAAK9D,UAAU,gBACX,2BAAOuD,QAAQ,iBAAf,4DAA+F,6BAC/F,kBAAC,IAAD,CAAc5B,KAAK,gBAAgBiC,UAAWtC,IAC9C,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,gBAAgBQ,KAAK,gBAAgBkC,MAAM,MAAMH,GAAII,MAC5E,qCAAgB,6BAChB,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,gBAAgBQ,KAAK,gBAAgBkC,MAAM,KAAKH,GAAII,MAC3E,oCAAe,6BACf,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,gBAAgBQ,KAAK,gBAAgBkC,MAAM,cAAcH,GAAII,MACpF,8CAGJ,yBAAK9D,UAAU,gBACX,2BAAOA,UAAU,QAAQuD,QAAQ,eAAjC,wGAMA,kBAAC,IAAD,CAAc5B,KAAK,cAAciC,UAAWtC,IAC5C,kBAAC,IAAD,CACIK,KAAK,cACLR,GAAG,cACHnB,UAAU,SACV0D,GAAIC,IACJI,QAAM,GAEN,kBAACC,EAAA,EAAD,CAAUH,MAAM,UAAhB,8BACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,QAAhB,mCACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,UAAhB,oCAGA,kBAACG,EAAA,EAAD,CAAUH,MAAM,QAAhB,kCACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,SAAhB,8BACA,kBAACG,EAAA,EAAD,CAAUH,MAAM,WAAhB,qBAGR,yBAAK7D,UAAU,gBACH,2BAAOA,UAAU,QAAQuD,QAAQ,YAC7B,kHAGhB,KAEY,kBAAC,IAAD,CAAc5B,KAAK,WAAWiC,UAAWtC,IACzC,yBAAKtB,UAAU,WACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,WACHQ,KAAK,WACLkC,MAAM,6BACNH,GAAIO,MAER,2BAAOjE,UAAU,gBAAjB,+BAIJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,WACHQ,KAAK,WACLkC,MAAM,8BACNH,GAAIO,MAER,2BAAOjE,UAAU,gBAAjB,gCAGJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,WACHQ,KAAK,WACLkC,MAAM,YACNH,GAAIO,MAGR,6CAEJ,yBAAKjE,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,WACHQ,KAAK,WACLkC,MAAM,mBACNH,GAAIO,MAGR,sDAIZ,yBAAKjE,UAAU,gBACX,2BAAOA,UAAU,QAAQuD,QAAQ,iBAC7B,uHAGQ,KAEZ,kBAAC,IAAD,CAAc5B,KAAK,gBAAgBiC,UAAWtC,IAC9C,yBAAKtB,UAAU,WACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,gBACHQ,KAAK,gBACLkC,MAAM,OACNH,GAAIO,MAER,2BAAOjE,UAAU,gBAAjB,yBAIJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,gBACHQ,KAAK,gBACLkC,MAAM,WACNH,GAAIO,MAER,2BAAOjE,UAAU,gBAAjB,aAGJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,gBACHQ,KAAK,gBACLkC,MAAM,QACNH,GAAIO,MAGR,iDAEJ,yBAAKjE,UAAU,UACX,kBAAC,IAAD,CACIwD,KAAK,WACLrC,GAAG,gBACHQ,KAAK,gBACLkC,MAAM,UACNH,GAAIO,MAGR,6CA4CjB,yBAAKjE,UAAU,gBACd,2BAAOuD,QAAQ,wBAAf,uLACqG,6BACrG,kBAAC,IAAD,CAAc5B,KAAK,uBAAuBiC,UAAWtC,IACrD,kBAAC,IAAD,CAAOkC,KAAK,QAAQrC,GAAG,uBAAuBQ,KAAK,uBAAuBkC,MAAM,WAAWH,GAAII,MAC/F,0CAAqB,6BAErB,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,uBAAuBQ,KAAK,uBAAuBkC,MAAM,sBAAsBH,GAAII,MAC1G,qDAAgC,6BAEhC,kBAAC,IAAD,CAAON,KAAK,QAAQrC,GAAG,uBAAuBQ,KAAK,uBAAuBkC,MAAM,oBAAoBH,GAAII,MACxG,mDAA8B,8BAElC,gCACI,4BAAQN,KAAK,SAASU,SAAUZ,GAAhC,UACA,2BAAIX,W,2CClfrBwB,gBCmBAC,G,OAdA,uCAAG,sCAAAC,EAAA,+EAG6CrF,IAAMC,IALnD,gDAEA,2BAGHO,KAAMb,EAHH,EAGGA,OAAOC,EAHV,EAGUA,UAAUC,EAHpB,EAGoBA,UAAUC,EAH9B,EAG8BA,OAH9B,kBAKH,CAACH,SAAOC,YAAUC,YAAUC,WALzB,4FAAH,sD,uFC6DAwF,EA7DD,SAAC,GAAgD,IAAD,IAA9C9E,KAAMb,EAAwC,EAAxCA,OAAOC,EAAiC,EAAjCA,UAAUC,EAAuB,EAAvBA,UAAUC,EAAa,EAAbA,OAC7C,OAAKF,EAKD,yBAAKoB,UAAWuE,IAAGtE,IAAOuE,GAAGvE,IAAOwE,OAE5C,yBAAKzE,UAAWC,IAAOC,WACX,kBAACwE,EAAA,EAAD,CAAMxE,WAAS,EAACyE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAO/D,MAAO,CAAEf,gBAAiB,wBAA0BiF,MAAI,EAACjB,UAAWkB,IAAMC,GAAI,GAAIC,GAAI,EAAGhF,UAAWuE,IAAGtE,IAAOgF,KAAMhF,IAAOtB,SAC9H,kBAACuG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYtE,MAAM,gBAAgBuE,cAAY,GAA9C,UACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK5G,EAAQ6G,SAAU,EAAGC,UAAU,OAE3D,kBAACN,EAAA,EAAD,CAAYE,QAAQ,SAApB,wCAKR,kBAACX,EAAA,EAAD,CAAM/D,MAAO,CAAEf,gBAAiB,4BAA8BiF,MAAI,EAACjB,UAAWkB,IAAMC,GAAI,GAAIC,GAAI,EAAGhF,UAAWuE,IAAGtE,IAAOgF,KAAMhF,IAAOyF,WACjI,kBAACR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYtE,MAAM,gBAAgBuE,cAAY,GAA9C,aACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK3G,EAAW4G,SAAU,EAAGC,UAAU,OAE9D,kBAACN,EAAA,EAAD,CAAYE,QAAQ,SAApB,2CAMR,kBAACX,EAAA,EAAD,CAAM/D,MAAO,CAAEf,gBAAiB,4BAA8BiF,MAAI,EAACjB,UAAWkB,IAAMC,GAAI,GAAIC,GAAI,EAAGhF,UAAWuE,IAAGtE,IAAOgF,KAAMhF,IAAOpB,YACjI,kBAACqG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYtE,MAAM,gBAAgBuE,cAAY,GAA9C,aACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK1G,EAAW2G,SAAU,EAAGC,UAAU,OAE9D,kBAACN,EAAA,EAAD,CAAYE,QAAQ,SAApB,wCAIR,kBAACX,EAAA,EAAD,CAAM/D,MAAO,CAAEf,gBAAiB,4BAA8BiF,MAAI,EAACjB,UAAWkB,IAAMC,GAAI,GAAIC,GAAI,EAAGhF,UAAWuE,IAAGtE,IAAOgF,KAAMhF,IAAOnB,SACjI,kBAACoG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYtE,MAAM,gBAAgBuE,cAAY,GAA9C,UACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKzG,EAAQ0G,SAAU,EAAGC,UAAU,OAG3D,kBAACN,EAAA,EAAD,CAAYE,QAAQ,SAApB,4CAhDT,kB,2BCoGAM,EAvGF,WAAO,IAAD,EACiBnH,mBAAS,IAD1B,mBACRoH,EADQ,KACEC,EADF,KAEXjH,EAAW,GACXwC,EAAO,GACPvC,EAAW,GACXC,EAAO,GACPH,EAAO,GAsDf,OAnDII,qBAAU,WACNC,IACKC,IADL,qDAEKC,MAAK,SAAAwB,GACFtB,QAAQC,IAAIqB,GADH,oBAISA,EAAIlB,MAJb,IAIT,2BAA2B,CAAC,IAAjBsG,EAAgB,QACvB1E,EAAM9B,KAAKwG,EAAI1E,OACfzC,EAAOW,KAAKC,SAASuG,EAAInH,SACzBG,EAAOQ,KAAKC,SAASuG,EAAIhH,SACzBD,EAAUS,KAAKC,SAASuG,EAAIjH,YAC5BD,EAAUU,KAAKC,SAASuG,EAAIlH,aATvB,8BAWTiH,EAAa,CAETpG,OAAQ2B,EACR1B,SAAU,CAAC,CACTF,KAAMb,EACNgB,MAAO,SACPE,YAAa,qBACbD,gBAAgB,qBAChBmG,MAAM,GACN,CACEvG,KAAMZ,EACNe,MAAO,YACPE,YAAa,UACbkG,MAAM,GAEV,CACIvG,KAAQV,EACRa,MAAO,SACPE,YAAa,MACbD,gBAAiB,uBACnBmG,MAAM,GAER,CACIvG,KAAQX,EACRc,MAAO,YACPE,YAAa,mBACbD,gBAAiB,yBACjBmG,MAAM,SAMjBjG,OAAM,SAAAC,GACHX,QAAQC,IAAIU,QAEtB,IAEF,yBAAKC,UAAWC,IAAOC,WACnB,gCAAQ,wBAAIF,UAAU,SAAd,gCACR,yBAAKA,UAAWC,IAAOE,KACvB,kBAAC,IAAD,CACAX,KAAMoG,EACNxF,QAAS,CACLC,YAAY,EACZC,qBAAqB,EAErB0F,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEfC,UAAW,CACTC,SAAS,KAIfC,MAAO,CACL,CACEF,UAAW,CACTC,SAAS,Y,mBClFdE,OAPf,WACE,OAAO,6BAEH,yBAAKC,IAAK,WAAWC,IAAKC,KAAa5G,UAAU,Y,qBCsFxC6G,GAtFI,WAAO,IAAD,EACIrI,mBAAS,IADb,mBACdsI,EADc,KACPC,EADO,KAEjBC,EAAa,GACbC,EAAiB,GACjBC,EAAgB,GAChBC,EAAiB,GA2CrB,OAxCApI,qBAAU,WACNC,IACKC,IADL,0CAEKC,MAAK,SAAAwB,GACFtB,QAAQC,IAAIqB,GADH,oBAESA,EAAIlB,KAAK4H,mBAFlB,IAET,2BAA8C,CAAC,IAApCtB,EAAmC,QAC1CkB,EAAW1H,KAAKwG,EAAIuB,MACpBJ,EAAe3H,KAAKC,SAASuG,EAAImB,iBACjCC,EAAc5H,KAAKC,SAASuG,EAAIoB,gBAChCC,EAAe7H,KAAKC,SAASuG,EAAIqB,kBAN5B,8BAQTJ,EAAQ,CACJtH,OAAQuH,EACRtH,SAAU,CAAC,CACTF,KAAMyH,EACNtH,MAAO,YACPE,YAAa,qBACbD,gBAAgB,qBAChBmG,MAAM,GACN,CACEvG,KAAM2H,EACNxH,MAAO,YACPE,YAAa,UACbkG,MAAM,GAEV,CACIvG,KAAQ0H,EACRvH,MAAO,SACPE,YAAa,MACbD,gBAAiB,uBACnBmG,MAAM,SAMfjG,OAAM,SAAAC,GACHX,QAAQC,IAAIU,QAErB,IAEC,yBAAKC,UAAWC,KAAOC,WACnB,gCAAQ,wBAAIF,UAAU,SAAd,gBACR,yBAAKA,UAAWC,KAAOE,KACnB,kBAAC,IAAD,CACIX,KAAMsH,EACN1G,QAAS,CACLC,YAAY,EACZC,qBAAqB,EACrB0F,OAAQ,CACJC,MAAO,CACH,CACIC,MAAO,CACHC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEjBC,UAAW,CACPC,SAAS,KAIrBC,MAAO,CACH,CACIF,UAAW,CACPC,SAAS,YClE5Be,G,4MACjBlG,MAAQ,CACJ5B,KAAM,I,kMAGoB4E,I,OAApBmD,E,OACNC,KAAKC,SAAS,CAAEjI,KAAM+H,I,qIAElB,IACA/H,EAASgI,KAAKpG,MAAd5B,KACR,OACE,yBAAKQ,UAAU,SACX,kBAAC,GAAD,MACA,8BACE,kBAAC0H,EAAA,EAAD,CAAQ1H,UAAU,KAAM2H,KAAK,KAAKC,QAAS,kBAAMzD,EAAQ7E,KAAK,gBAA9D,yCACA,8BAGJ,kBAAC,EAAD,CAAOE,KAAMA,IAEb,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,8BAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA1B0BqI,aCLbC,G,uKAEb,OACI,kBAAC,IAAD,CAAQ3D,QAAS4D,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACrE,UAAWsE,KACjC,kBAAC,IAAD,CAAOF,KAAK,gBAAgBpE,UAAWrD,IACvC,kBAAC,IAAD,CAAOyH,KAAK,aAAapE,UAAWlB,U,GAPpBmF,aCkCrBM,G,uKArBX,OAAQ,6BAGN,yBAAKnI,UAAWC,IAAOC,WAGrB,yBAAKF,UAAU,OAEb,kBAAC,GAAD,a,GAdQoI,IAAMP,WCHJQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,GAAD,KACF,kBAAC,GAAD,OAKEC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9J,MAAK,SAAA+J,GACJA,EAAaC,gBAEdpJ,OAAM,SAAAqJ,GACL/J,QAAQ+J,MAAMA,EAAMC,c","file":"static/js/main.c1eb461d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DoughnutChart_container__RUi5m\",\"grp\":\"DoughnutChart_grp__3oq3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__21e0H\",\"grp\":\"Chart_grp__2cd6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DatePicker_container__aAkSl\",\"grp\":\"DatePicker_grp__2YRgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1EM01\",\"image\":\"App_image__35NIs\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__5Vs2d\",\"card\":\"Cards_card__3rU41\",\"active\":\"Cards_active__3WrL-\",\"infected\":\"Cards_infected__9EfqY\",\"recovered\":\"Cards_recovered__3MGkE\",\"deaths\":\"Cards_deaths__392Wg\",\"btnGrid\":\"Cards_btnGrid__1bdVy\"};","import React, { useState, useEffect } from 'react';\nimport {  Doughnut, Pie } from 'react-chartjs-2';\nimport axios from 'axios'\nimport styles from './DoughnutChart.module.css'\n\n\n\n\n    const Doughnut2 = () => {\n        const [total, setTotal] = useState({})\n        let active = [];\n        let confirmed = [];\n        let recovered = [];\n        let deaths = [];\n    \n    \n        useEffect(() => {\n               axios\n                .get(`https://api.covidindiatracker.com/total.json`)\n                .then(response => {\n                    console.log(response) \n                    \n                    {\n                        active.push(parseInt(response.data.active))\n                        deaths.push(parseInt(response.data.deaths))\n                        recovered.push(parseInt(response.data.recovered))\n                        confirmed.push(parseInt(response.data.confirmed)) }\n\n                    \n                    setTotal({\n                        \n                        labels:['Active', 'Confirmed', 'Recovered', 'Deaths'],\n                        datasets: [ {\n                            label:'total case',\n                            data:[active,confirmed,recovered,deaths],\n                            backgroundColor:['rgb(255,215,0,0.5)','rgba(0, 0, 255, 0.5)','rgba(0, 255, 0,0.5)','rgba(255, 0, 0,0.5)'],\n                            borderColor:['rgb(255,215,0,1)','rgba(0, 0, 255,0.9)','rgba(0, 255, 0,0.9)','rgba(255, 0, 0,0.9)']\n\n                        }\n                        \n                        ]\n    \n                    })\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        },[])\n            \n    \n        return (\n            <div className={styles.container}>\n                <center><h1 className='head1'></h1></center>\n                <div className={styles.grp}>\n                    <Doughnut\n                        data={total}\n                        options={{\n                            responsive: true,\n                            maintainAspectRatio: true\n                        }} />\n    \n                </div>\n    \n            </div>\n        )\n    }\n\n\n\nexport default Doughnut2;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './CovidTracker.css'\n\n\n\nfunction CovidTracker() {\n    const [posts, setPosts] = useState({})\n    useEffect(() => {\n        axios\n            .get(`https://api.covidindiatracker.com/state_data.json`)\n            .then(res => {\n                console.log(res)\n                setPosts(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    \n\n    return (\n        <div\n            style={{\n                background: '',\n                // padding: '5%',\n                // fontFamily: '\"Arial\", Monaco, monospace'\n            }} className='body'>\n              <center> <h1 className='head2'\n            style={{\n                color: '',\n                fontSize:'',\n                // padding: '1rem',\n                \n                // fontFamily: 'Algerian'\n                }}></h1></center> \n            \n\n            <div>\n                \n                <table>\n                    \n                    <thead>\n                        <tr className='content'>\n                            <th>STATE</th>\n                            <th>ACTIVE</th>\n                            <th>CONFIRMED</th>\n                            <th>RECOVERED</th>\n                            <th>DEATHS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {posts.length\n                            ? posts.map((post) =>\n                                (\n                                    <tr key={post.id}>\n                                        <td>{post.state}</td>\n                                        <td>{post.active}</td>\n                                        <td >{post.confirmed}</td>\n                                        <td >{post.recovered}</td>\n                                        <td >{post.deaths}</td>\n                                    </tr>\n\n                                )) : <tr><td colSpan='5'>Loading...</td></tr>\n                        }\n\n                    </tbody>\n\n                </table>\n            </div>\n\n\n        </div>\n        \n    )\n}\n\nexport default CovidTracker","import React from 'react'\n\nfunction TextError(props) {\n  return <div className='error'>\n      {props.children}\n  </div>\n}\n\nexport default TextError","import React,{useState} from 'react'\nimport * as Yup from 'yup'\nimport { Formik, Form, Field, ErrorMessage, } from 'formik'\nimport { Radio, MenuItem, TextField, Checkbox } from '@material-ui/core'\nimport TextError from './TextError'\n\n\n\n\nconst validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    age: Yup.string().required('Required'),\n    gender: Yup.string().required('Required'),\n    livinglocation: Yup.string().required('Required'),\n    workinglocation: Yup.string().required('Required'),\n    smoke: Yup.string().required('Required'),\n    travelHistory: Yup.string().required('Required'),\n    // travelLocation: Yup.string().required('Required'),\n    travelDomestic: Yup.string().required('Required'),\n    // travelDomesticLocation: Yup.string().required('Required'),\n    contactPeople: Yup.string().required('Required'),\n    suspectPeople: Yup.string().required('Required'),\n    temperature: Yup.string().required('Required'),\n    symptoms: Yup.string().required('Required'),\n    complications: Yup.string().required('Required'),\n    underlyingConditions: Yup.string().required('Required')\n\n})\nfunction ifNeeded(data) {\n    var score = 0;\n    \n    console.log(\"submit: \", data);\n    if (data.livinglocation !== \"Living Alone\") {\n      score++;\n    }\n    if (data.workinglocation !== \"None of the above\") {\n      score++;\n    }\n    if (data.smoke !== \"No\") {\n      score++;\n    }\n    if (data.travelHistory !== \"No\") {\n      score++;\n      if (data.travelLocation !== \"Other Country\") {\n        score += 2;\n      }\n    }\n    if (data.travelDomestic !== \"No\") {\n      score += 3;\n    }\n    if (data.contactPeople !== \"No\") {\n      score++;\n    }\n    if (data.suspectPeople !== \"No\") {\n      score++;\n    }\n    if (data.symptoms.length !== 0) {\n      score++;\n    }\n    if (data.complications.length !== 0) {\n      score++;\n    }\n    if (data.underlyingConditions.length !== 0) {\n      score++;\n    }\n    switch (data.temperature) {\n      case \"Medium\":\n        score++;\n        break;\n      case \"High\":\n        score++;\n        break;\n      case \"VHigh\":\n        score++;\n        break;\n      default:\n    }\n  \n    if (score > 9) {\n      return( \n        <div className=\"head\">  \n        <h1 className=\"foot\">High Risk <span>😷</span></h1> <br/>\n        You have a HIGH RISK of having covid-19.Please consult a doctor.\n        </div>\n      )}\n  \n    if (score <= 9 && score >= 5) {\n      return(\n       <div className=\"head\">\n            <h1 className=\"foot\">Medium Risk <span>🙂</span></h1><br/>\n            You have a MEDIUM RISK of having covid-19.Please consult a doctor.\n      </div>\n      )\n    }\n  \n    if (score >= 0 && score <= 4) {\n      return( \n          <div className=\"head\">\n              <h1 className=\"foot\">Low Risk <span>😊</span></h1><br/>\n              You have a LOW RISK of having covid-19.Please consult a doctor.\n              </div>\n              )}\n    \n    console.log(score);\n  }\nfunction CovidForm() {\n        const [result, setresult] = useState('')\n\n    return (\n        <Formik\n            initialValues={{\n                name: \"\",\n                age: \"\",\n                gender: \"\",\n                livinglocation: \"\",\n                workinglocation: \"\",\n                smoke: \"\",\n                travelHistory: \"\",\n                travelLocation: \"\",\n                travelDomestic: \"\",\n                travelDomesticLocation: \"\",\n                contactPeople: \"\",\n                suspectPeople: \"\",\n                temperature: \"\",\n                symptoms: \"\",\n                complications: \"\",\n                underlyingConditions: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(data, { setSubmitting, resetForm }) => {\n                setSubmitting(true);\n                console.log(\"submit: \", data);\n                setSubmitting(false);\n                resetForm();\n                setresult(ifNeeded(data))\n            }}\n        >\n            {({ values, isSubmitting }) => (\n                <div>\n\n                    <div className='bg-img'>\n\n                        <Form className='form-cls'>\n                            <h2 className='header'>FIND OUT IF YOU NEED A COVID 19 TEST 💉</h2>\n\n\n                            <div className='form-control'>\n                                <label htmlFor=\"name\">1) What is your name?</label><br />\n\n                                <Field type='text' id='name' name='name' placeholder='Enter your name' className='textbox' as={TextField} />\n\n                                <ErrorMessage name='name' component={TextError} />\n                            </div>\n\n                            <div className='form-control '>\n                                <label htmlFor=\"age\">2) How old are you?</label><br />\n                                <Field type='text' id='age' name='age' placeholder='Enter your age' className='textbox' as={TextField} />\n                                <ErrorMessage name='age' component={TextError} />\n                            </div>\n\n                            <div className='form-control '>\n                                <label htmlFor=\"gender\">3) Please select your gender:-</label><br />\n                                <ErrorMessage name='gender' component={TextError} />\n\n\n                                <Field type='radio' value=\"Female\" name='gender' as={Radio} />\n                                <span>Female</span><br />\n\n                                <Field type='radio' value=\"Male\" name='gender' as={Radio} />\n                                <span>Male</span><br />\n\n                                <Field type='radio' value=\"Others\" name='gender' as={Radio} />\n                                <span>Others</span><br />\n\n                            </div>\n\n                            <div className='form-control'>\n                                <label htmlFor=\"livinglocation\">4) What is your current living condition?</label><br />\n                                <ErrorMessage name='livinglocation' component={TextError} />\n\n                                <Field type='radio' id='livinglocation' name='livinglocation' value='Living Alone' as={Radio} />\n                                <span> Living Alone</span><br />\n\n                                <Field type='radio' id='livinglocation' name='livinglocation' value='Living with Family' as={Radio} />\n                                <span> Living With Family</span>\n                            </div>\n\n\n                            <div className='form-control'>\n                                <label htmlFor=\"workinglocation\">5) Where do you work? (current nature & location of job)</label><br />\n                                <ErrorMessage name='workinglocation' component={TextError} />\n\n                                <Field type='radio' id='workinglocation' name='workinglocation' value='Medical/Healthcare field' as={Radio} />\n                                <span> Medical/Healthcare field</span><br />\n\n                                <Field type='radio' id='workinglocation' name='workinglocation' value='Community facility(school,day care center,university,old age home etc)' as={Radio} />\n                                <span> Community facility(school,day care center,university,old age home etc)</span><br />\n\n                                <Field type='radio' id='workinglocation' name='workinglocation' value='None of the above' as={Radio} />\n                                <span> None of the above</span>\n\n                            </div>\n\n                            <div className='form-control'>\n                                <label htmlFor=\"smoke\">6) Do you smoke?</label><br />\n                                <ErrorMessage name='smoke' component={TextError} />\n\n                                <Field type='radio' id='smoke' name='smoke' value='Yes' as={Radio} />\n                                <span>Yes</span><br />\n\n                                <Field type='radio' id='smoke' name='smoke' value='No' as={Radio} />\n                                <span>No</span>\n                            </div>\n\n                            <div className='form-control'>\n                                <label htmlFor=\"travelHistory\">7) Have you been travelling internationally in the past month ?</label><br />\n                                <ErrorMessage name='travelHistory' component={TextError} />\n\n                                <Field type='radio' id='travelHistory' name='travelHistory' value='Yes' as={Radio} />\n                                <span>Yes</span><br />\n\n                                <Field type='radio' id='travelHistory' name='travelHistory' value='No' as={Radio} />\n                                <span>No</span>\n                            </div>\n\n                            <div className=\"form-control\">\n                                <label className=\"label\" htmlFor=\"travelLocation\">\n                                    8) if yes, was it to or from one of these places?\n                                    </label>\n                                <ErrorMessage name=\"travelLoaction\" component={TextError} />\n                                <Field\n                                    name=\"travelLocation\"\n                                    id=\"travelLocation\"\n                                    className=\"select\"\n                                    as={TextField}\n                                    select\n                                >\n                                    <MenuItem value=\"China\">China</MenuItem>\n                                    <MenuItem value=\"europe\">Europe</MenuItem>\n                                    <MenuItem value=\"Iran\">Iran</MenuItem>\n                                    <MenuItem value=\"U.S\">U.S</MenuItem>\n                                    <MenuItem value=\"South Korea\">South Korea</MenuItem>\n                                    <MenuItem value=\"Japan\">Japan</MenuItem>\n                                    <MenuItem value=\"Other Country\">Other Country</MenuItem>\n                                </Field>\n                            </div>\n\n                            <div className='form-control'>\n                                <label htmlFor=\"travelDomestic\">9) Have you been travelling domestically in the past couple of month ?</label><br />\n                                <ErrorMessage name='travelDomestic' component={TextError} />\n                                <Field type='radio' id='travelDomestic' name='travelDomestic' value='Yes' as={Radio} />\n                                <span>Yes</span><br />\n\n                                <Field type='radio' id='travelDomestic' name='travelDomestic' value='No' as={Radio} />\n                                <span>No</span>\n                            </div>\n\n                            <div className=\"form-control\">\n                                <label className=\"label\" htmlFor=\"travelDomesticLocation\">\n                                    10) if yes, was it to or from one of these places?\n                                    </label>\n                                <ErrorMessage name=\"travelLocation\" component={TextError} />\n                                <Field\n                                    name=\"travelDomesticLocation\"\n                                    id=\"travelDomesticLocation\"\n                                    className=\"select\"\n                                    as={TextField}\n                                    select\n                                >\n                                    <MenuItem value=\"Rajasthan\">Rajasthan</MenuItem>\n                                    <MenuItem value=\"Karnatak\">Karnatak</MenuItem>\n                                    <MenuItem value=\"Gujarat\">Gujarat</MenuItem>\n                                    <MenuItem value=\"Haryana\">Haryana</MenuItem>\n                                    <MenuItem value=\"Kerala\">Kerala</MenuItem>\n                                    <MenuItem value=\"Punjab\">Punjab</MenuItem>\n                                    <MenuItem value=\"Delhi\">Delhi</MenuItem>\n                                    <MenuItem value=\"Maharatra\">Maharastra</MenuItem>\n                                    <MenuItem value=\"Telangana\">Telangana</MenuItem>\n                                    <MenuItem\n                                        value=\"Not the one listed\"\n                                        label=\"Not the one listed\"\n                                    />\n                                </Field>\n                            </div>\n\n                            \n\n                            <div className='form-control'>\n                                <label htmlFor=\"contactPeople\">11) Have you had a close contact with a confirmed case ?</label><br />\n                                <ErrorMessage name='contactPeople' component={TextError} />\n                                <Field type='radio' id='contactPeople' name='contactPeople' value='Yes' as={Radio} />\n                                <span>Yes</span><br />\n\n                                <Field type='radio' id='contactPeople' name='contactPeople' value='No' as={Radio} />\n                                <span>No</span>\n                            </div>\n\n                            <div className='form-control'>\n                                <label htmlFor=\"suspectPeople\">12) Have you had a close contact with a suspected case ?</label><br />\n                                <ErrorMessage name='suspectPeople' component={TextError} />\n                                <Field type='radio' id='suspectPeople' name='suspectPeople' value='Yes' as={Radio} />\n                                <span>Yes</span><br />\n                                <Field type='radio' id='suspectPeople' name='suspectPeople' value='No' as={Radio} />\n                                <span>No</span><br />\n                                <Field type='radio' id='suspectPeople' name='suspectPeople' value='Do not Know' as={Radio} />\n                                <span>Do not Know</span>\n                            </div>\n\n                            <div className=\"form-control\">\n                                <label className=\"label\" htmlFor=\"temperature\">\n                                    \n                                        13) Please let us know your current body temperature in degree\n                                        Fahrenheit (Normal body temperature)?\n                    \n                                </label>\n                                <ErrorMessage name=\"temperature\" component={TextError} />\n                                <Field\n                                    name=\"temperature\"\n                                    id=\"temperature\"\n                                    className=\"select\"\n                                    as={TextField}\n                                    select\n                                >\n                                    <MenuItem value=\"Normal\">Normal (96°F-98.6°F)</MenuItem>\n                                    <MenuItem value=\"Mild\">Mild Fever (98.6°F-100°F)</MenuItem>\n                                    <MenuItem value=\"Medium\">\n                                        Medium Fever (101°F-102°F)\n                                    </MenuItem>\n                                    <MenuItem value=\"High\">High Fever (103°F-104°F)</MenuItem>\n                                    <MenuItem value=\"VHigh\">Very High Fever (104°F)</MenuItem>\n                                    <MenuItem value=\"Unknown\">Don’t know</MenuItem>\n                                </Field>\n                            </div>\n                            <div className=\"form-control\">\n                                        <label className=\"label\" htmlFor=\"symptoms\">\n                                            <span>14)\n                                            Are you experiencing any of the symptoms below (select all\n                                            those applicable)\n                    </span>{\" \"}\n                                        </label>\n                                        <ErrorMessage name=\"symptoms\" component={TextError} />\n                                        <div className=\"options\">\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"symptoms\"\n                                                    name=\"symptoms\"\n                                                    value=\"Fatique/Tiredness/Weakness\"\n                                                    as={Checkbox}\n                                                />\n                                                <label className=\"label-option\">\n                                                    Fatique/Tiredness/Weakness\n                      </label>\n                                            </div>\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"symptoms\"\n                                                    name=\"symptoms\"\n                                                    value=\"Chills/Sneezing/Sore Throat\"\n                                                    as={Checkbox}\n                                                />\n                                                <label className=\"label-option\">Chills/Sneezing/Sore Throat</label>\n                                            </div>\n\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"symptoms\"\n                                                    name=\"symptoms\"\n                                                    value=\"Limb Pain\"\n                                                    as={Checkbox}\n                                                />\n\n                                                <label>Limb Pain</label>\n                                            </div>\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"symptoms\"\n                                                    name=\"symptoms\"\n                                                    value=\"Persistent Cough\"\n                                                    as={Checkbox}\n                                                />\n\n                                                <label>Persistent Cough</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-control\">\n                                        <label className=\"label\" htmlFor=\"complications\">\n                                            <span>15)\n                                                Do you have a history of any of these complications\n                                                (select all those applicable)\n                                            </span>{\" \"}\n                                        </label>\n                                        <ErrorMessage name=\"complications\" component={TextError} />\n                                        <div className=\"options\">\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"complications\"\n                                                    name=\"complications\"\n                                                    value=\"Lung\"\n                                                    as={Checkbox}\n                                                />\n                                                <label className=\"label-option\">\n                                                    Chronic lung disease\n                                                </label>\n                                            </div>\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"complications\"\n                                                    name=\"complications\"\n                                                    value=\"Diabetes\"\n                                                    as={Checkbox}\n                                                />\n                                                <label className=\"label-option\">Diabetes</label>\n                                            </div>\n\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"complications\"\n                                                    name=\"complications\"\n                                                    value=\"Heart\"\n                                                    as={Checkbox}\n                                                />\n\n                                                <label>Heart disease</label>\n                                            </div>\n                                            <div className=\"option\">\n                                                <Field\n                                                    type=\"checkbox\"\n                                                    id=\"complications\"\n                                                    name=\"complications\"\n                                                    value=\"Obesity\"\n                                                    as={Checkbox}\n                                                />\n\n                                                <label>Obesity</label>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n{/*                             \n                             <div className=\"form-control\">\n                                <label className=\"label\" htmlFor=\"symptoms\">\n                                    14)\n                                    Are you experiencing any of the symptoms below (select all\n                                    those applicable)?\n                                </label>\n                                <ErrorMessage name=\"symptoms\" component={TextError} />\n                                <Field type='checkbox' id='symptoms' name='symptoms' value='Fatigue/Tiredness/Weakness' as={Checkbox} />\n                                <span>Fatigue/Tiredness/Weakness</span>\n                                <Field type='checkbox' id='symptoms' name='symptoms' value='Chills/Sneezing/Sore Throat' as={Checkbox} />\n                                <span>Chills/Sneezing/Sore Throat</span>\n                                <Field type='chechbox' id='symptoms' name='symptoms' value='Limb Pain' as={Checkbox} />\n                                <span>Limb Pain</span>\n                                <Field type='chechbox' id='symptoms' name='symptoms' value='Cough' as={Checkbox} />\n                                <span>Persistent Cough</span>\n                                <Field type='chechbox' id='symptoms' name='symptoms' value='None' as={Checkbox} />\n                                <span>NONE</span> \n                            </div>\n                            <div className=\"form-control\">\n                                <label className=\"label\" htmlFor=\"complications\">\n                                15)\n                                    Do you have a history of any of these complications\n                                    (select all those applicable)\n                \n                                </label>\n                                <ErrorMessage name=\"complications\" component={TextError} />\n                                <Field type='checkbox' id='complications' name='complications' value='Lung' as={Checkbox} />\n                                <span>Chronic lung disease</span>\n                                <Field type='checkbox' id='complications' name='complications' value='Diabetes' as={Checkbox} />\n                                <span>Diabetes</span>\n                                <Field type='chechbox' id='complications' name='complications' value='Heart' as={Checkbox} />\n                                <span>Heart disease</span>\n                                <Field type='chechbox' id='complications' name='complications' value='Obesity' as={Checkbox} />\n                                <span>Obesity</span>\n                                <Field type='chechbox' id='complications' name='complications' value='None' as={Checkbox} />\n                                <span>NONE</span> \n                            </div>   */}\n                               <div className='form-control'>\n                                <label htmlFor=\"underlyingConditions\">16) Are you currently taking any of the following? (you take or get immunosuppresives\n                                after an organ transplant, in the therapy of an autoimmune disease, or during chemotherapy.)?</label><br />\n                                <ErrorMessage name='underlyingConditions' component={TextError} />\n                                <Field type='radio' id='underlyingConditions' name='underlyingConditions' value='Steriods' as={Radio} />\n                                <span>Steriods</span><br />\n\n                                <Field type='radio' id='underlyingConditions' name='underlyingConditions' value='Immunnosuppressants' as={Radio} />\n                                <span>Immunnosuppressants</span><br />\n\n                                <Field type='radio' id='underlyingConditions' name='underlyingConditions' value='None of the above' as={Radio} />\n                                <span>None of the above</span><br />\n                            </div>\n                            <center>\n                                <button type='submit' disabled={isSubmitting} >SUBMIT</button>\n                                <p>{result}</p>\n                            </center>\n\n                        </Form>\n                    </div>\n                </div>\n            )}\n        </Formik>\n    )\n}\nexport default CovidForm\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import axios from 'axios';\n\n\n\n\nexport const url ='https://api.covidindiatracker.com/total.json'\n\nconst fetchData = async () => {\n \n    try {\n        const {data:{active,confirmed,recovered,deaths}}=await axios.get(url);\n\n        return {active,confirmed,recovered,deaths};\n    }\n    catch(error) {\n\n    }\n}\n\n\n\nexport default fetchData;","import React from 'react'\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup';  \nimport cx from 'classnames';  \nimport Button from '@material-ui/core/Button';  \nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\n\nconst Cards = ({data:{active,confirmed,recovered,deaths}}) => {\n    if (!confirmed) {\n        return 'Please wait...';\n\n}\n    return (\n        <div className={cx(styles.bg,styles.form)}>\n\n<div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\" >\n                <Grid  style={{ backgroundColor: 'rgba(255,215,0,0.35)' }} item component={Card} xs={12} md={3} className={cx(styles.card, styles.active)}>\n                    <CardContent >\n                        <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end={active} duration={3} separator=\",\" />\n                        </Typography>\n                        <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n\n\n                <Grid style={{ backgroundColor: 'rgba(208, 208, 241, 0.5)' }} item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent >\n                        <Typography color=\"textSecondary\" gutterBottom>Confirmed</Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end={confirmed} duration={3} separator=\",\" />\n                        </Typography>\n                        <Typography variant=\"body2\">Number of confirmed cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n\n\n\n                <Grid style={{ backgroundColor: 'rgba(188, 253, 188, 0.5)' }} item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end={recovered} duration={3} separator=\",\" />\n                        </Typography>\n                        <Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid style={{ backgroundColor: 'rgba(245, 192, 192, 0.5)' }} item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end={deaths} duration={3} separator=\",\" />\n                        </Typography>\n                        \n                        <Typography variant=\"body2\">Number of deaths caused by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n\n        </div>\n        </div>\n        \n    )\n}\n\nexport default Cards;","import React,{useState, useEffect} from 'react';  \nimport { Line,Doughnut } from 'react-chartjs-2';  \nimport styles from './Chart.module.css'  \nimport axios from 'axios'\n\n\nconst Chart =() => {\n    const [chartData,setChartData] =useState({})\n    let confirmed =[];\n    let state =[];\n    let recovered =[];\n    let deaths=[];\n    let active=[];\n    //const [dailyData, setDailyData] = useState({});  \n    \n    useEffect(() => {\n        axios\n            .get(`https://api.covidindiatracker.com/state_data.json`)\n            .then(res => {\n                console.log(res)\n                \n                //setDailyData(obj.deaths)\n                for (const obj of res.data){\n                    state.push(obj.state)\n                    active.push(parseInt(obj.active))\n                    deaths.push(parseInt(obj.deaths))\n                    recovered.push(parseInt(obj.recovered))\n                    confirmed.push(parseInt(obj.confirmed))\n                }\n                setChartData({\n         \n                    labels: state,  \n                    datasets :[{  \n                      data :active ,  \n                      label: 'Active',  \n                      borderColor: 'rgb(255,215,0,0.7)',  \n                      backgroundColor:'rgb(255,215,0,0.3)',\n                      fill: true,\n                  },  {  \n                        data :confirmed ,  \n                        label: 'Confirmed',  \n                        borderColor: '#3333ff',  \n                        fill: true,\n                    },  \n                    {  \n                        data :  deaths,  \n                        label: 'Deaths',  \n                        borderColor: 'red',  \n                        backgroundColor: 'rgba(255, 0, 0, 0.3)',  \n                      fill: true,  \n                   },\n                    {  \n                        data :  recovered,  \n                        label: 'Recovered',  \n                        borderColor: 'rgb(50, 250, 50)',  \n                        backgroundColor: 'rgba(124, 254, 0, 0.5)',  \n                        fill: true,  \n                    }]  \n                 \n                \n            })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },[]) \nreturn (\n    <div className={styles.container}>\n        <center><h1 className='head1'>Current Statistics of State</h1></center> \n        <div className={styles.grp}>\n        <Line\n        data={chartData}\n        options={{\n            responsive: true,\n            maintainAspectRatio: true,\n            \n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    beginAtZero: true\n                  },\n                  gridLines: {\n                    display: true\n                  }\n                }\n              ],\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  }\n                }\n              ]\n            }\n          }}\n        //  options={ {  \n        //              scales : { xAxes : [ { gridLines : { display : false } } ], yAxes : [ { gridLines : { display : false } } ] } } \n        //          } \n                 />\n        </div>\n       \n    </div>\n)\n}\n\n   \nexport default Chart\n\n","import React from 'react'\nimport coronoImage from './Images/image.png'\n\nfunction Image() {\n  return <div>\n     \n      <img alt ='Covid-19' src={coronoImage} className='image'/>\n  </div>\n}\n\nexport default Image","import React, { useState, useEffect } from 'react';\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport axios from 'axios'\nimport styles from './DatePicker.module.css'\n\n\nconst DatePicker = () => {\n    const [Dates, setDate] = useState({})\n    let dailyDates = [];\n    let dailyconfirmed = [];\n    let dailydeceased = [];\n    let dailyrecovered = [];\n\n\n    useEffect(() => {\n        axios\n            .get(`https://api.covid19india.org/data.json`)\n            .then(res => {\n                console.log(res)\n                for (const obj of res.data.cases_time_series) {\n                    dailyDates.push(obj.date)\n                    dailyconfirmed.push(parseInt(obj.dailyconfirmed))\n                    dailydeceased.push(parseInt(obj.dailydeceased))\n                    dailyrecovered.push(parseInt(obj.dailyrecovered))  \n                }\n                setDate({\n                    labels: dailyDates,  \n                    datasets :[{  \n                      data :dailyconfirmed ,  \n                      label: 'confirmed',  \n                      borderColor: 'rgb(255,215,0,0.7)',  \n                      backgroundColor:'rgb(255,215,0,0.3)',\n                      fill: true,\n                  },  {  \n                        data :dailyrecovered ,  \n                        label: 'recovered',  \n                        borderColor: '#3333ff',  \n                        fill: true,\n                    },  \n                    {  \n                        data :  dailydeceased,  \n                        label: 'Deaths',  \n                        borderColor: 'red',  \n                        backgroundColor: 'rgba(255, 0, 0, 0.3)',  \n                      fill: true,  \n                   \n                    }]  \n                   \n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n    return (\n        <div className={styles.container}>\n            <center><h1 className='head1'>DailyUpdate</h1></center>\n            <div className={styles.grp}>\n                <Line\n                    data={Dates}\n                    options={{\n                        responsive: true,\n                        maintainAspectRatio: true,\n                        scales: {\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        autoSkip: true,\n                                        maxTicksLimit: 10,\n                                        beginAtZero: true\n                                    },\n                                    gridLines: {\n                                        display: true\n                                    }\n                                }\n                            ],\n                            xAxes: [\n                                {\n                                    gridLines: {\n                                        display: false\n                                    }\n                                }\n                            ]\n                        }\n                    }}\n                \n                />\n            </div>\n\n        </div>\n    )\n}\nexport default DatePicker\n","import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport history from './History';\nimport \"./Modal.module.css\";\nimport fetchData from './api/index';\nimport  Cards  from  './Cards/Cards.jsx'\nimport Chart from './Chart/Chart.jsx'\nimport Image from './Image'\nimport CovidTracker from './CovidTracker'\nimport Doughnut2 from \"./DoughnutChart/Doughnut2\";\nimport DatePicker from './DatePicker/DatePicker'\n\n\nexport default class Home extends Component {\n    state = {\n        data: {},\n      }\n      async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData })\n      }\n  render() {\n    const { data } = this.state;\n    return (\n      <div className='modal'>\n          <Image />\n          <form>\n            <Button className='b1'  size='lg' onClick={() => history.push('/CovidForm')}>FIND OUT IF YOU NEED A COVID 19 TEST </Button>\n            <br/>\n            {/* <Button className='b2'  onClick={() => history.push('/CovidTracker')}>CURRENT STATISTICS OF COVID-19 STATEWISE</Button> */}\n          </form>\n        <Cards data={data} />\n       \n        <Doughnut2/>\n        <DatePicker/>\n        <div>\n         \n        </div>\n        <Chart/>\n        <CovidTracker/>\n        \n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport CovidTracker from \"./CovidTracker\";\nimport CovidForm from \"./CovidForm\";\nimport Modal from \"./Modal\";\nimport History from \"./History\";\n\n\nexport default class Routes extends Component {\n    render() {\n        return (\n            <Router history={History}>\n                <Switch>\n                    <Route path=\"/\" exact component={Modal} />\n                    <Route path=\"/CovidTracker\" component={CovidTracker} />\n                    <Route path=\"/CovidForm\" component={CovidForm} />\n                </Switch>\n            </Router>\n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import CovidForm from './Components/CovidForm'\nimport styles from './App.module.css'\n// import { Cards, Chart } from './Components'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import fetchData from './Components/api/index';\n// import CovidTracker from './Components/CovidTracker'\n// import Image from './Components/Image'\nimport Doughnut2 from './Components/DoughnutChart/Doughnut2'\nimport Routes from './Components/Routes';\n\n\n\nclass App extends React.Component {\n \n\n\n  render() {\n   \n    return (<div>\n\n\n      <div className={styles.container}>\n\n        \n        <div className=\"App\">\n\n          <Routes />\n        </div>\n       \n        {/* <CovidForm/>\n           <CovidTracker/>   */}\n\n        {/* <Doughnut2 /> */}\n      </div>\n    </div>\n\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Components/Routes';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Routes>\n<App />\n  </Routes>,\n    \n  // </React.StrictMode>\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}